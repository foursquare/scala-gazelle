{
    "source": "testdata/parser_integration/spark/GeneralizedLinearRegression.scala",
    "imports": [
        "breeze.stats.distributions",
        "breeze.stats.distributions.Rand.FixedSeed.randBasis",
        "java.util.Locale",
        "org.apache.commons.lang3.StringUtils",
        "org.apache.hadoop.fs.Path",
        "org.apache.spark.SparkException",
        "org.apache.spark.annotation.Since",
        "org.apache.spark.internal.LogKeys",
        "org.apache.spark.internal.Logging",
        "org.apache.spark.internal.MDC",
        "org.apache.spark.ml.PredictorParams",
        "org.apache.spark.ml.attribute._",
        "org.apache.spark.ml.feature.Instance",
        "org.apache.spark.ml.feature.OffsetInstance",
        "org.apache.spark.ml.linalg.BLAS",
        "org.apache.spark.ml.linalg.Vector",
        "org.apache.spark.ml.linalg.Vectors",
        "org.apache.spark.ml.optim._",
        "org.apache.spark.ml.param._",
        "org.apache.spark.ml.param.shared._",
        "org.apache.spark.ml.util.DatasetUtils._",
        "org.apache.spark.ml.util.Instrumentation.instrumented",
        "org.apache.spark.ml.util._",
        "org.apache.spark.rdd.RDD",
        "org.apache.spark.sql.Column",
        "org.apache.spark.sql.DataFrame",
        "org.apache.spark.sql.Dataset",
        "org.apache.spark.sql.Row",
        "org.apache.spark.sql.functions._",
        "org.apache.spark.sql.types.DataType",
        "org.apache.spark.sql.types.DoubleType",
        "org.apache.spark.sql.types.StructType"
    ],
    "package": "org.apache.spark.ml.regression",
    "fully_qualified_names": [
        "Array.concat",
        "Array.range",
        "Array.tabulate",
        "BLAS.dot",
        "Binomial.name",
        "DefaultParamsReader.loadMetadata",
        "DefaultParamsWriter.saveMetadata",
        "Double.MaxValue",
        "Double.MinValue",
        "Double.NaN",
        "Family.fromParams",
        "Gaussian.name",
        "GeneralizedLinearRegressionModel.GeneralizedLinearRegressionModelWriter",
        "Identifiable.randomUID",
        "Link.fromParams",
        "Locale.ROOT",
        "LogKeys.UUID",
        "NumericAttribute.defaultAttr.withName",
        "OptionalInstrumentation.create",
        "ParamValidators.inArray",
        "Poisson.name",
        "SchemaUtils.appendColumn",
        "SchemaUtils.checkNumericType",
        "StringUtils.leftPad",
        "Tweedie.delta",
        "Vectors.empty",
        "Vectors.zeros",
        "attr.toStructField",
        "cell.length",
        "coefficients.size",
        "coefficientsArray.length",
        "coefficientsWithStatistics.map",
        "colNames.map",
        "data.foreach",
        "data.getAs",
        "data.getDouble",
        "dataset.schema",
        "diagInvAtWA.length",
        "family.aic",
        "family.deviance",
        "family.initialize",
        "family.name",
        "family.project",
        "family.variance",
        "familyAndLink.fitted",
        "familyLink.family",
        "familyLink.link",
        "familyObj.defaultLink",
        "featureAttrs.get.map",
        "featureAttrs.isDefined",
        "glrSummary.getDouble",
        "glrSummary.getLong",
        "index.map",
        "instance.coefficients",
        "instance.features",
        "instance.intercept",
        "instance.label",
        "instance.offset",
        "instance.weight",
        "instances.map",
        "java.util.UUID.randomUUID.toString",
        "link.deriv",
        "link.link",
        "link.unlink",
        "math.Pi",
        "math.abs",
        "math.exp",
        "math.log",
        "math.log1p",
        "math.max",
        "math.pow",
        "math.sqrt",
        "metadata.getAndSetParams",
        "metadata.uid",
        "model.coefficients.size",
        "model.coefficients.toArray",
        "model.extractParamMap",
        "model.featuresCol",
        "model.getFamily.toLowerCase",
        "model.getFeaturesCol",
        "model.getFitIntercept",
        "model.getWeightCol",
        "model.hasOffsetCol",
        "model.hasWeightCol",
        "model.intercept",
        "model.predict",
        "model.transform",
        "model.variancePower",
        "mu.isInfinity",
        "mu.isNegInfinity",
        "mu.isPosInfinity",
        "nd.length",
        "numInstances.toDouble",
        "origModel.getPredictionCol",
        "origModel.getPredictionCol.nonEmpty",
        "origModel.isDefined",
        "origModel.numFeatures",
        "origModel.predictionCol",
        "outputData.toDF",
        "outputData.withColumn",
        "paramMap.put",
        "paramMap.remove",
        "params.getFamily.toLowerCase",
        "params.getLink.toLowerCase",
        "params.getLinkPower",
        "params.getVariancePower",
        "params.isSet",
        "params.link",
        "params.linkPower",
        "predictions.select",
        "rd.length",
        "row.productIterator.map",
        "sb.append",
        "sb.toString",
        "str.length",
        "str.substring",
        "strRow.toArray",
        "strRow.zipWithIndex.foreach",
        "super.load",
        "super.validateAndTransformSchema",
        "supportedFamilyAndLinkPairs.contains",
        "supportedFamilyNames.contains",
        "supportedFamilyNames.mkString",
        "supportedLinkNames.contains",
        "supportedLinkNames.mkString",
        "supportedSolvers.mkString",
        "tValues.map",
        "this.link.deriv",
        "this.logWarning",
        "value.toLowerCase",
        "x._1",
        "x._2"
    ],
    "symbols": [
        "GeneralizedLinearRegression",
        "GeneralizedLinearRegression.load",
        "GeneralizedLinearRegressionModel",
        "GeneralizedLinearRegressionModel.load",
        "GeneralizedLinearRegressionModel.read",
        "GeneralizedLinearRegressionSummary",
        "GeneralizedLinearRegressionTrainingSummary"
    ]
}
